// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShareLoc.Client.DAL;

#nullable disable

namespace ShareLoc.Client.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231120194825_ShareLoc-Migration-Init")]
    partial class ShareLocMigrationInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ShareLoc.Client.DAL.Entities.GuessEntity", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("Distance")
                        .HasColumnType("REAL");

                    b.Property<Guid>("GuesserId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<Guid>("LocalPlaceId")
                        .HasColumnType("TEXT");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PlaceEntityLocalId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("ServerId")
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.HasIndex("LocalPlaceId");

                    b.HasIndex("PlaceEntityLocalId");

                    b.ToTable("Guesses");
                });

            modelBuilder.Entity("ShareLoc.Client.DAL.Entities.PlaceEntity", b =>
                {
                    b.Property<Guid>("LocalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CratedUTC")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ServerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SharedUTC")
                        .HasColumnType("TEXT");

                    b.HasKey("LocalId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("ShareLoc.Client.DAL.Entities.GuessEntity", b =>
                {
                    b.HasOne("ShareLoc.Client.DAL.Entities.PlaceEntity", null)
                        .WithMany("Guesses")
                        .HasForeignKey("LocalPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShareLoc.Client.DAL.Entities.PlaceEntity", null)
                        .WithMany()
                        .HasForeignKey("PlaceEntityLocalId");
                });

            modelBuilder.Entity("ShareLoc.Client.DAL.Entities.PlaceEntity", b =>
                {
                    b.Navigation("Guesses");
                });
#pragma warning restore 612, 618
        }
    }
}
